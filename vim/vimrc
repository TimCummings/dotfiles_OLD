" ============================================================
" Vim-Plug
" ============================================================

" automatically download and install vim-plug plugin manager
" if it's not detected
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()
Plug 'joshdick/onedark.vim'
Plug 'challenger-deep-theme/vim', { 'as': 'challenger-deep' }
Plug 'arcticicestudio/nord-vim'
Plug 'mhartington/oceanic-next'
Plug 'sheerun/vim-polyglot'
Plug 'itchyny/lightline.vim'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app & yarn install'  }
Plug 'dense-analysis/ale'
Plug 'ap/vim-css-color'
Plug 'steven-liou/console-puts'  " Toggle print functions on and off
call plug#end()

" ============================================================
" Plugin-Specific Settings
" ============================================================

" ALE:
  " go to next error
  nmap <silent> <C-j> <Plug>(ale_next_wrap)
  " go to previous error
  nmap <silent> <C-k> <Plug>(ale_previous_wrap)
  " lint on leaving insert mode and saving files; no other times
  let g:ale_lint_on_text_changed = 'never'
  let g:ale_lint_on_enter = 0


" ============================================================
" Color Scheme Settings
" ============================================================
" Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
" If you're using tmux version 2.2 or later, you can remove the outermost
" $TMUX check and use tmux's 24-bit color support
" (see < http://sunaku.github.io/tmux-24bit-color.html#usage > for more information.)
if (has("nvim"))
"      "For Neovim 0.1.3 and 0.1.4 <
"      https://github.com/neovim/neovim/pull/2198 >
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif
" For Neovim > 0.1.5 and Vim > patch 7.4.1799
"   < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
" Based on Vim patch 7.4.1770 (`guicolors` option)
"   < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
"   < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
if (has("termguicolors"))
  set termguicolors
endif

" 24 bit colors inside tmux
if exists('$TMUX')
  let &t_8f = "\<Esc>[38:2:%lu:%lu:%lum"
  let &t_8b = "\<Esc>[48:2:%lu:%lu:%lum"
endif

" enable syntax highlighting
syntax on
set background=dark
" let g:lightline = {
"       \ 'colorscheme': 'nord',
"       \ 'separator': { 'left': "\ue0b0", 'right': "\ue0b2" },
"       \ 'subseparator': { 'left': "\ue0b1", 'right': "\ue0b3" }
"       \ }
let g:lightline = {
      \ 'colorscheme': 'challenger_deep',
      \ 'separator': { 'left': "\ue0b0", 'right': "\ue0b2" },
      \ 'subseparator': { 'left': "\ue0b1", 'right': "\ue0b3" }
      \ }
colorscheme nord
" tweak background color
" highlight Normal guibg=#1f2228

" ============================================================
" Functions
" ============================================================

" simply returning from file explorer
function! OpenExplorer()
  try
    :Rex
  catch
    :Ex
  endtry
endfunction

" ============================================================
" Leader Key Mappings
" ============================================================

" yank to system clipboard (Linux)
map <Leader>y "+y
" turn off highlighting
map <Leader>h :noh<CR>
" file explorer
map <Leader>e :call OpenExplorer()<CR>
" simple snippets
  " HTML
  map <Leader>shtml :r ~/dotfiles/vim/snippets/skeleton.html<CR>
  " PEDAC
  map <Leader>sp :r ~/dotfiles/vim/snippets/pedac.md<CR>
  " Markdown Solution Block (generic)
  map <Leader>ss :r ~/dotfiles/vim/snippets/markdown_solution.md<CR>
  " Markdown Solution Block (javascript)
  map <Leader>ssj :r ~/dotfiles/vim/snippets/markdown_javascript_solution.md<CR>

" ============================================================
" Autocommands
" ============================================================

autocmd! FileType javascript nnoremap <leader>r :!node %:p<CR>
autocmd! FileType ruby nnoremap <leader>r :!ruby %:p<CR>

" ============================================================
" Other Settings
" ============================================================

" various tab related settings
set expandtab
set tabstop=2
set shiftwidth=2
set autoindent
" set smartindent

" make backspace work normally
set backspace=indent,eol,start

" show absolute and relative line numbers
set number
set relativenumber

" always show cursor position
" set ruler

" highlight current cursor line
set cursorline

" (Hopefully) removes the delay when hitting esc in insert mode
"   * vim only; nvim deprected noesckeys
if !has('nvim')
  set noesckeys
  set ttimeout
  set ttimeoutlen=1
endif

" status line
set laststatus=2
set noshowmode

" copy to system clipboard?
set clipboard=unnamed

" Exclude line numbers when selecting/copying
" se mouse+=a

" open new split panes to right and bottom
set splitbelow
set splitright

" disable automatic multi-line comments
" autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" display hidden characters
set listchars=tab:>-,trail:~,extends:>,precedes:<,nbsp:~
set list
set showbreak=^

set ignorecase
set smartcase
